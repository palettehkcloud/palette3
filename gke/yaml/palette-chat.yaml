apiVersion: v1
kind: Service
metadata:
  name: palette3-chat
  labels:
    app: palette3-chat
  annotations:
    beta.cloud.google.com/backend-config: '{"default": "palette-socket-backendconfig"}'
spec:
  type: NodePort
  selector:
    app: palette3-chat
  ports:
    - name: palette3-chat
      protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: palette3-chat
  labels:
    app: palette3-chat
spec:
  replicas: 1
  serviceName: palette3-chat
  #podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: palette3-chat
  template:
    metadata:
      labels:
        app: palette3-chat
    spec:
      restartPolicy: Always
      imagePullSecrets:
       - name: palette3-git-regcred 
      containers:
        - name: palette3-chat
          image: ghcr.io/palettehkcloud/palette3-api:2023.0721.005
          envFrom:
          - configMapRef:
              name: palette-configmap-chat
          env:
            - name: JAVA_OPTS
              value: "-Djava.net.preferIPv4Stack=true -Dfile.encoding=UTF-8"
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: K8S_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: K8S_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: palette-repository
              mountPath: /orange/app/palette3/repository
            - name: tz-seoul
              mountPath: /etc/localtime
      volumes:
        - name: tz-seoul
          hostPath:
            path: /usr/share/zoneinfo/Asia/Seoul
        - name: palette-repository
          nfs:
            server: 10.39.97.2
            path: /paletteVolume
